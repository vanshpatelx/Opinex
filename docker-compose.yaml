# version: '3.8'

# services:
#   auth:
#     image: "${DOCKER_USERNAME}/opinex-auth-image:latest"
#     environment:
#       DB_HOST: db
#       DB_PORT: 5432
#       DB_USER: user
#       DB_PASSWORD: password
#       DB_NAME: mydatabase
#       REDIS_HOST: redis
#       REDIS_PORT: 6379
#     ports:
#       - "3000:3000"
#     depends_on:
#       db:
#         condition: service_healthy
#       redis:
#         condition: service_healthy

#   service2:
#     image: "${DOCKER_USERNAME}/opinex-service2-image:latest"
#     environment:
#       DB_HOST: db
#       DB_PORT: 5432
#       DB_USER: user
#       DB_PASSWORD: password
#       DB_NAME: mydatabase
#       REDIS_HOST: redis
#       REDIS_PORT: 6379
#     ports:
#       - "8080:8080"
#     depends_on:
#       db:
#         condition: service_healthy
#       redis:
#         condition: service_healthy

#   db:
#     image: postgres:15
#     environment:
#       POSTGRES_USER: user
#       POSTGRES_PASSWORD: password
#       POSTGRES_DB: mydatabase
#     ports:
#       - "5432:5432"
#     volumes:
#       - db_data:/var/lib/postgresql/data
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U user -d mydatabase"]
#       interval: 10s
#       timeout: 5s
#       retries: 5

#   redis:
#     image: redis:7
#     ports:
#       - "6379:6379"
#     volumes:
#       - redis_data:/data
#     healthcheck:
#       test: ["CMD", "redis-cli", "ping"]
#       interval: 5s
#       timeout: 3s
#       retries: 5

# volumes:
#   db_data:
#   redis_data:


version: '3.8'
services:
  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    restart: always
    command: >
      redis-server --requirepass password --port 6379 
      --save 60 1 --appendonly yes
    environment:
      REDIS_PASSWORD: password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data  # Persistent storage for Redis

volumes:
  pg_data:
    name: postgres_data
  redis_data:
    name: redis_storage
